$date
  Mon Jun  8 12:04:14 2015
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 8 ! ma[7:0] $end
$var reg 8 " dp2m[7:0] $end
$var reg 8 # dm2p[7:0] $end
$var reg 1 $ ck $end
$var reg 1 % we $end
$var reg 1 & rst $end
$scope module mem $end
$var reg 1 ' ck $end
$var reg 1 ( we $end
$var reg 8 ) address[7:0] $end
$var reg 8 * datain[7:0] $end
$var reg 8 + dataout[7:0] $end
$comment ram is not handled $end
$upscope $end
$scope module proc $end
$var reg 1 , rst $end
$var reg 1 - ck $end
$var reg 1 . we $end
$var reg 8 / ma[7:0] $end
$var reg 8 0 mdi[7:0] $end
$var reg 8 1 mdo[7:0] $end
$var reg 4 2 currentstate[3:0] $end
$var reg 4 3 nextstate[3:0] $end
$var reg 8 4 instr[7:0] $end
$var reg 8 5 cst[7:0] $end
$var reg 8 6 a[7:0] $end
$var reg 8 7 b[7:0] $end
$var reg 8 8 aluout[7:0] $end
$var reg 8 9 regabin[7:0] $end
$var reg 8 : arg1[7:0] $end
$var reg 8 ; arg2[7:0] $end
$var reg 8 < pc[7:0] $end
$var reg 8 = pcin[7:0] $end
$var reg 8 > pcoffset[7:0] $end
$var reg 8 ? nextpc[7:0] $end
$var reg 1 @ dests $end
$var reg 1 A arg1s $end
$var reg 1 B arg2s $end
$var reg 1 C jr $end
$var reg 4 D codeop[3:0] $end
$var reg 2 E cond[1:0] $end
$var reg 5 F offset[4:0] $end
$var reg 1 G ceinstr $end
$var reg 1 H cecst $end
$var reg 1 I cea $end
$var reg 1 J ceb $end
$var reg 1 K cedest $end
$var reg 1 L ceflags $end
$var reg 1 M cepc $end
$var reg 1 N ja $end
$var reg 1 O progfetch $end
$var reg 1 P z $end
$var reg 1 Q c $end
$var reg 1 R n $end
$var reg 1 S aluz $end
$var reg 1 T aluc $end
$var reg 1 U alun $end
$var reg 1 V condtrue $end
$var reg 9 W addresult[8:0] $end
$var reg 9 X subresult[8:0] $end
$var reg 1 Y instrisja $end
$var reg 1 Z instrisjr $end
$var reg 1 [ instrisalu $end
$var reg 1 \ instriscmp $end
$var reg 1 ] instrisnotorcp $end
$var reg 1 ^ instrismem $end
$var reg 1 _ onewordinstr $end
$scope module regpc $end
$var reg 1 ` rst $end
$var reg 1 a ck $end
$var reg 1 b ce $end
$var reg 8 c di[7:0] $end
$var reg 8 d do[7:0] $end
$upscope $end
$scope module reginstr $end
$var reg 1 e rst $end
$var reg 1 f ck $end
$var reg 1 g ce $end
$var reg 8 h di[7:0] $end
$var reg 8 i do[7:0] $end
$upscope $end
$scope module regcst $end
$var reg 1 j rst $end
$var reg 1 k ck $end
$var reg 1 l ce $end
$var reg 8 m di[7:0] $end
$var reg 8 n do[7:0] $end
$upscope $end
$scope module rega $end
$var reg 1 o rst $end
$var reg 1 p ck $end
$var reg 1 q ce $end
$var reg 8 r di[7:0] $end
$var reg 8 s do[7:0] $end
$upscope $end
$scope module regb $end
$var reg 1 t rst $end
$var reg 1 u ck $end
$var reg 1 v ce $end
$var reg 8 w di[7:0] $end
$var reg 8 x do[7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUU !
bUUUUUUUU "
bUUUUUUUU #
1$
0%
1&
1'
0(
bUUUUUUUU )
bUUUUUUUU *
bUUUUUUUU +
1,
1-
0.
bUUUUUUUU /
bUUUUUUUU 0
bUUUUUUUU 1
bUUUU 2
b1111 3
bUUUUUUUU 4
bUUUUUUUU 5
bUUUUUUUU 6
bUUUUUUUU 7
b00000000 8
b00000000 9
bUUUUUUUU :
bUUUUUUUU ;
bUUUUUUUU <
bXXXXXXXX =
b00000001 >
bXXXXXXXX ?
U@
UA
UB
0C
bUUUU D
bUU E
bUUUUU F
0G
0H
0I
0J
0K
0L
0M
0N
0O
UP
UQ
UR
1S
0T
0U
0V
bXXXXXXXXX W
bXXXXXXXXX X
0Y
UZ
0[
0\
0]
0^
U_
1`
1a
0b
bXXXXXXXX c
bUUUUUUUU d
1e
1f
0g
bUUUUUUUU h
bUUUUUUUU i
1j
1k
0l
bUUUUUUUU m
bUUUUUUUU n
1o
1p
0q
b00000000 r
bUUUUUUUU s
1t
1u
0v
b00000000 w
bUUUUUUUU x
#500000
0$
0'
0-
0a
0f
0k
0p
0u
#1000000
b00000000 !
b00000000 "
1$
1'
b00000000 )
b00000000 *
1-
b00000000 /
b00000000 1
b0000 2
b0001 3
b00000000 4
b00000000 5
b00000000 6
b00000000 7
b00000000 8
b00000000 9
b00000000 :
b00000000 ;
b00000000 <
b00000001 =
b00000001 ?
0@
0A
0B
b0000 D
b00 E
b00000 F
1G
1O
0P
0Q
0R
1S
0T
0U
1V
b000000000 W
b000000000 X
0Z
1[
1_
1a
b00000001 c
b00000000 d
1f
1g
b00000000 i
1k
b00000000 n
1p
b00000000 r
b00000000 s
1u
b00000000 w
b00000000 x