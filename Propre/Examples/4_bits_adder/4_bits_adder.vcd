$date
  Wed Jul  8 16:50:48 2015
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 8 ! resultat[7:0] $end
$var reg 1 " monreset $end
$scope module uut $end
$var reg 1 # reset $end
$var reg 8 $ sortiecompteur[7:0] $end
$var reg 8 % entreereg[7:0] $end
$var reg 8 & sortiereg[7:0] $end
$var reg 1 ' clock $end
$var reg 1 ( dev0 $end
$scope module adderinstance $end
$var reg 8 ) x[7:0] $end
$var reg 8 * y[7:0] $end
$var reg 1 + cin $end
$var reg 8 , s[7:0] $end
$var reg 1 - cout $end
$var reg 9 . c[8:0] $end
$scope module addloop(0) $end
$scope module fulladderinstance $end
$var reg 1 / x $end
$var reg 1 0 y $end
$var reg 1 1 cin $end
$var reg 1 2 cout $end
$var reg 1 3 sum $end
$upscope $end
$upscope $end
$scope module addloop(1) $end
$scope module fulladderinstance $end
$var reg 1 4 x $end
$var reg 1 5 y $end
$var reg 1 6 cin $end
$var reg 1 7 cout $end
$var reg 1 8 sum $end
$upscope $end
$upscope $end
$scope module addloop(2) $end
$scope module fulladderinstance $end
$var reg 1 9 x $end
$var reg 1 : y $end
$var reg 1 ; cin $end
$var reg 1 < cout $end
$var reg 1 = sum $end
$upscope $end
$upscope $end
$scope module addloop(3) $end
$scope module fulladderinstance $end
$var reg 1 > x $end
$var reg 1 ? y $end
$var reg 1 @ cin $end
$var reg 1 A cout $end
$var reg 1 B sum $end
$upscope $end
$upscope $end
$scope module addloop(4) $end
$scope module fulladderinstance $end
$var reg 1 C x $end
$var reg 1 D y $end
$var reg 1 E cin $end
$var reg 1 F cout $end
$var reg 1 G sum $end
$upscope $end
$upscope $end
$scope module addloop(5) $end
$scope module fulladderinstance $end
$var reg 1 H x $end
$var reg 1 I y $end
$var reg 1 J cin $end
$var reg 1 K cout $end
$var reg 1 L sum $end
$upscope $end
$upscope $end
$scope module addloop(6) $end
$scope module fulladderinstance $end
$var reg 1 M x $end
$var reg 1 N y $end
$var reg 1 O cin $end
$var reg 1 P cout $end
$var reg 1 Q sum $end
$upscope $end
$upscope $end
$scope module addloop(7) $end
$scope module fulladderinstance $end
$var reg 1 R x $end
$var reg 1 S y $end
$var reg 1 T cin $end
$var reg 1 U cout $end
$var reg 1 V sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module reginstance $end
$var reg 1 W clk $end
$var reg 1 X rst $end
$var reg 1 Y enable $end
$var reg 8 Z entree[7:0] $end
$var reg 8 [ sortie[7:0] $end
$upscope $end
$scope module clkinstance $end
$var reg 1 \ clk0 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUU !
1"
1#
bUUUUUUUU $
bUUUUUUUU %
bUUUUUUUU &
0'
U(
b00000111 )
b00000001 *
0+
bUUUUUUUU ,
U-
bUUUUUUUU0 .
1/
10
01
U2
U3
14
05
U6
U7
U8
19
0:
U;
U<
U=
0>
0?
U@
UA
UB
0C
0D
UE
UF
UG
0H
0I
UJ
UK
UL
0M
0N
UO
UP
UQ
0R
0S
UT
UU
UV
0W
1X
1Y
bUUUUUUUU Z
bUUUUUUUU [
0\
#30000
bUUUUUUU0 %
bUUUUUUU0 ,
03
U8
U=
UB
UG
UL
UQ
UV
bUUUUUUU0 Z
#80000
0(
0-
b00000UU10 .
12
16
U7
U<
0A
0E
0F
0J
0K
0O
0P
0T
0U
#110000
b0000UU00 %
b0000UU00 ,
08
0G
0L
0Q
0V
b0000UU00 Z
#160000
b00000U110 .
17
1;
0F
0K
0P
0U
#190000
b0000U000 %
b0000U000 ,
0=
b0000U000 Z
#240000
b000001110 .
1<
1@
#270000
b00001000 %
b00001000 ,
1B
b00001000 Z
